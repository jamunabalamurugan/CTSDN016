Need of javascript or scripting technology:
--------------------------------------------
1)when we want to include our own logic when i execute a page then i will use javascript .
2)In this i will use two tags <script>  and closing </script> tag.
3)If there are controls in the form to validate the controls also we use javascript.
eg:Inside a  text box of i should not enter more than 6 characters to do that i will write a code in javascript
and give user a alert message when he does mistakes
4) Javascript is completely at the client side anybody can check the code and see its execution if u allow or check the browser to include script code.
5)The script code can be written after <head> tag or it can be placed inside a body also.
6)To declare a variable we use var datatype it takes any arguments of our choice means if i supply 30 it will become a data type of integer and if i supply string say "mohan" it will become string data type.
7)To print any message i use document.write method .
8)All html tags are valid and can be used in document.write( ) method.
9)The tags can be used anywhere after <head> and also after <body> it will work fine.


example1 for javascript 
-----------------------
<html>
<head>
<title>javascript demo </title>
<script language='javascript'>
var x=45;
var name="ramesh";
document.write("<h2>"+name +" is " +x+" years old </h2><br>");
document.write("<h2>hello world<br>")
</script>
</head>
<body>
<h1>This is a sample example on javascript 
</h1>
</body>
</html>

syntax for function:
----------------------
function function_name (paramters value)
{


}
eg :add(x,y)
{
  var z;
  z=x +y;
  document.write("The sum is "+z);
}
example 2 :
------------
<html><head>
<title>Strings  
</title></head>
<body>
<h2>parse Int and parse float demo </h2>
<script  type='text/javascript'>
function add(x,y)
{
var total;
total=parseInt(x) + parseInt(y);
alert (total);
}</script>
1st number <input type="text"  name="Myname1"  value=" "><br>
2nd number <input type="text"  name="Myname2"  value=" "><br>
<input type="button"  name=ok  value="largest"  onClick=add(Myname1.value,Myname2.value)>  
</body>
</html>
Note: for decimal value conversion use parseFloat() in the above coding.

some more coding so here u can see that 
when u click the div tag and it output is changed according to what u have written 

<html>
<head>
</head>
<body>
<div id='feedback' onClick='goodbye()'>Users without Javascript see  this.</div>
<script type='text/javascript'> 
document.getElementById('feedback').innerHTML='Hello World!';
function goodbye() {
document.getElementById('feedback').innerHTML='Goodbye World!';
}
</script>
</body>
</html>

some more coding where u have a textbox and button and then and by click of button i am showing the output in div tag and u can see how getelementbyid syntax is used earlier and now in this program and all 

<HTML>
<HEAD> </HEAD>
<BODY> 
<input id='userInput' size=60> <button  
onClick='userSubmit()'>Submit</button><BR>
<P><div id='result'></div>
<script type='text/javascript'>
function userSubmit() {
var UI=document.getElementById('userInput').value;
document.getElementById('result').innerHTML='You typed: '+UI;
}
</script>
</BODY>
</HTML>
some more coding for javascript and all 
<html><head><title>My First Javascript</title>
</head><body>Hello World!
<p>Say what? <input id="sayThis" size=40>
<P>How many times? <select id='howMany'>
<option value=1>1</option>
<option value=5 selected>5</option>
<option value=10>10</option>
<option value=20>20</option>
</select>
<p><button onClick='doLoop()'>Do It!</button>
<p><div id="results"></div>
<script type='text/javascript'>
function doLoop() {
var sayWhat = document.getElementById('sayThis').value;
var maxLoop = document.getElementById('howMany').value;
var str = ''; // where we'll store our output temporarily.
for (var i=1; (i<=maxLoop); i++) {
str=str+i+':'+sayWhat+'<br>';
}
document.getElementById("results").innerHTML=str;
}
</script>
</body>
</html>


JavaScript uses dialog boxes to interact with the user. The dialog boxes are created with three methods:

alert()
prompt()
confirm()
alert:
------
We saw in the last chapter that the write() and writeln() were JavaScript methods used to send output to the Web page. Another way to send output to the browser is with the alert() method. The alert() method creates a little independent box—called a dialog box—which contains a small triangle with an exclamation point. 

syntax:

alert("String of plain text");
alert(expression);

eg:
alert("Phone number is incorrect");
alert(a + b);
prompt :
-------
Since JavaScript does not provide a simple method for accepting user input , the prompt dialog box and HTML forms are used  The prompt dialog box pops up with a simple textfield box.

syntax:
prompt(message);
prompt(message, defaultText);

eg:
prompt("What is your name? ", "");
prompt("Where is your name? ", name);

The Confirm Box:
-----------------
The confirm dialog box is used to confirm a user's answer to a question. A question mark will appear in the box with an OK button and a Cancel button. If the user presses the OK button, true is returned; if he presses the Cancel button, false is returned. This method takes only one argument, the question you will ask the user.

example 5:
----------
<html>
    <head>
    <title>using prompt box with if else</title>
    </head>    <body>
        <script language = "JavaScript">
         var name=prompt("What is your name?", "");
           document.write("<br>Welcome to my world! "
               + name + "<br>");
           var age=prompt("Tell me your age.", "Age");
           if ( age==null){    
              alert("Not sharing your age with me");
           }
            else{
              alert(age + " is young");
            }
          alert(prompt("Where do you live? ", ""));
        </script>
    </body>
    </html>
example 6:
----------
<html>
  <head>
  <title>Using the JavaScript confirm box</title>
   </head>
  <body>
        <script language = "JavaScript">
          if(confirm("Are you really OK?") == true){
              alert("Then we can finish the work");
            }
            else{
              alert("We'll try when you feel better? ");
            }
        </script>
    </body>
    </html>
example 9:
-----------
<html><head>
<title>Strings </title></head>
<body>
<h2>if else are tested here .... </h2>
<script language="javascript">
function Test(str1,str2,str3)
{
x=parseInt(str1);
y=parseInt(str2);
z=parseInt(str3);
if( ( x >y )  && ( x > z))
document.write("The largest number is "+x);
else if((y > z) && ( y > x)) 
document.write("The largest number is " +y);
else
document.write("The largest number is " +z);
}
</script>
1st number <input type="text"  name="Myname1"  value=" "><br>
2nd number <input type="text"  name="Myname2"  value=" "><br>
3rd number <input type="text"  name="Myname3"  value=" "><br>
<input type=button  name=ok  value="largest " 
 onClick=Test(Myname1.value,Myname2.value,Myname3.value)>  
</body></html>

To check email is valid or not :
__________________________________
<script>
function validate()
{
var x;
x=document.getElementById('email').value;
var atpos=x.indexOf('@');
alert(atpos);
var dotpos=x.lastIndexOf('.');
alert(dotpos);
alert(x.length);
var c=x.length-dotpos;
if (atpos<1 || dotpos<atpos+2 || dotpos+2>=x.length || c>4)
  {
  alert("Not a valid e-mail address");
  return false;
  }
}
</script>
<body>
<form>
<input type="text" id="email" >
<input type="button" onclick="validate()" value="click">
</form>
</body>

To click the button and use of or operator :
____________________________________________
<script>
function aa(firstvar,secondvar)
{
var first= firstvar || 10;
var second = secondvar ||10;
var c = first+second;
alert( c);
}
</script>

<body>

<input type="submit" onclick="aa()"> <br>
<input type="submit" onclick="aa(10)"> <br>
<input type="submit" onclick="aa(11,10)"> <br>
</body>

validating an basic html form using javascript :
-------------------------------------------------
<html><head>
<title>Form Validation</title>
<script type="text/javascript">
function validate()
{
 
   if( document.myForm.Name.value == "" )
   {
     alert( "Please provide your name!" );
     document.myForm.Name.focus() ;
     return false;
   }
   if(document.myForm.EMail.value == "" )
   {
     alert( "Please provide your Email!" );
     document.myForm.EMail.focus() ;
     return false;
   }
   if(document.myForm.Zip.value == "" ||
           isNaN( document.myForm.Zip.value ) ||
           document.myForm.Zip.value.length != 5 )
   {
     alert( "Please provide a zip in the format #####." );
     document.myForm.Zip.focus() ;
     return false;
   }
   if(document.myForm.Country.value == "-1" )
   {
     alert( "Please provide your country!" );
     return false;
   }
   return( true );
}
</script>
</head>
<body>
 <form action="/cgi-bin/test.cgi" name="myForm"  
          onsubmit="return(validate());">
 <table cellspacing="2" cellpadding="2" border="1">
 <tr>
   <td align="right">Name</td>
   <td><input type="text" name="Name" /></td>
 </tr>
 <tr>
   <td align="right">EMail</td>
   <td><input type="text" name="EMail" /></td>
 </tr>
 <tr>
   <td align="right">Zip Code</td>
   <td><input type="text" name="Zip" /></td>
 </tr>
 <tr>
 <td align="right">Country</td>
 <td>
 <select name="Country">
   <option value="-1" selected>[choose yours]</option>
   <option value="1">USA</option>
   <option value="2">UK</option>
   <option value="3">INDIA</option>
 </select>
 </td>
 </tr>
 <tr>
   <td align="right"></td>
   <td><input type="submit" value="Submit" /></td>
 </tr>
 </table> </form>
 </body> </html>
CSS BOx Model :
---------------
One of the powerful features of modern HTML and Cascading Style Sheets (CSS) for web development is that you can almost completely separate the markup of your page in HTML from the rendering details specified in your CSS. An HTML page using a small selection of tags and some CSS styling can look like… well, just about anything you like. And you can change how it looks by simply changing the CSS.

A basic - but often misunderstood - feature of CSS styling is something called the box model. The box model simply defines the rectangular space around an element and is defined by three properties:

    border
    padding
    margin

check slide 13 in web slides for clear explanation and below are the definitions for it 

The border represents the effective outer limit of the element itself. The border can be either visible or invisible, and has properties for line type, color, and width.

Padding specifies the spacing between the border and any content within the HTML element. If there’s no visible border, then the extent of the padding is effectively the extent of the element. Any background CSS properties associated with the element are displayed within the area defined by the border and padding properties.

The margin represents the distance between the outer edge of the border and any neighboring elements. This is often a source of confusion as it’s easy to think of the margin as a kind of “padding” between elements. Better to think of it like the margin of a page: it represents the outer edge of the object. The margin is effectively transparent and will not reflect any of the background properties specified for the element.

so here u check another slide in webslides which is cssbox okay which gives clear explanation first width and height will come for the element which u define 
and then u define border and this content has to be how much far from border is decided by padding stuff and the border should be away from the page is decided by margin tags which can be applied as u know to four corners and another thing is u will use maximum div tags to implement css box model okay .



<html>
<head>
<title >The box model example </title>
<style type="text/css">
body {background: black;}
#container {
    background: gray; 
    width: 600px; 
    margin: 0px auto; 
    border: 1px solid black;}
	
	p { background: white;
    border: 20px solid red; 
    margin-top: 20px;
    margin-right: 20px;
    margin-bottom: 20px;
    margin-left: 20px;
    padding-top: 20px;
    padding-right: 20px;
    padding-bottom: 20px;
    padding-left: 20px; }
</style>
</head>
<body>
<div id="container">
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, 
      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
</div>	
	</body>
</html>
so we can give it in a single line as well like this margin: [top] [right] [bottom] [left]

if u want to bring the div in the middle irespective of browser movement u can do like this use auto at right and left of the margin okay 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>First Styles </title>
<style type="text/css">

#container{ 
background-color:yellow;
padding:20px;
border:5px solid red;
margin-top:20px;
margin-left:auto;
margin-right:auto;
margin-bottom:1em;
width:50%;


}

</style>
</head>
<body>
<div id="container">
this is a good example this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 
this is a good example 


</div>


</body>
</html>

u better refer vtc videos for box model it has been given very nicely okay .



HTML5:
******
HTML 5 is the latest revision of html and is designed to allow creation of more richer more semantic code and as well as to address how modren web applications are created .check html5slide1 in webslides folder .where it is telling how it was originated a group of people were not happy with using xhtml1.0 so they started there own stuff coming out of w3c organization .so the specification which they created converted that into html5 and check slides html5slide2 html5slide3 for explanaion it is given clearly .
so html5 is completely application specific and it does not include any policies because of which u cannot run html4 means it is backward compatibility is there and another as i was saying application specific means support for mutiple api and these capabilities make developers to devlop application in mobile as well video and audio etc features will be there no need to add plug in etc kind of stuff and create interactive content okay .

dramatic changes have come in web and mobile technologies with usage of html5 and according to specification it will do error handling as well no need to validate each code by javascript which we will see in the below coding and all .

so first programming example will be semantics which i am following open folder 01_03 and open all the files and show them the difference of usage and how it has become easy and all in these u need to understand the exact use of aside tag so what is doing 
so check slide html5slide4 to 6 u will come to know already some tags defined and to those tags also u can apply style sheet features that is the advantage that is why it is showing at the right in the slide but in my coding i am directly using those slides as well okay and i can implement those properties to all the other part of html5 elements like nav ,footer etc okay if not used also it will work u can check once so when checked i kept footer at the place of header and header at the place of footer it  is not working so earlier we used to apply classes to our interetesed tags like div now directly u can name them in stylesheet as per the slide okay .just try to check out the changes that is what i am talking about means i am using new structure and semantics in this okay .


now go to chapter2 folder and show them the difference earlier we were writing doctype and metha now that much is not required which is shown in first folder okay next is open again second folder and see the difference like script type i have not used and other things etc just analize it properly okay .

so just tell them these are the differences and now let us run videos and validating stuff check it out in interent in html5 okay .


inserting a audio and video  in the html file:
----------------------------------------------
<html>
<head>
<title>The video demo </title>
</head>
<body>
<bgsound src=kalimba.mp3 loop="infinite"  >
<img src=Blue_bulb.gif  alt="super duper blub">
<embed src=Wildlife.wmv height=300 width=400>
</body>
</html>

<!DOCTYPE HTML>
<html>
<body>

<video width="320" height="240" controls>
  <source src="movie.mp4" type="video/mp4">
  <source src="movie.ogg" type="video/ogg">
  Your browser does not support the video tag.
</video>

</body>
</html> 
this was old way of doing it now in html5 they have introduced so tag with video and audio which is written down coding completely 
and ask them to go through w3schools and check some of the examples etc okay and open html5 from geetha content some things are not working of that code may be because of latest  internet explorer i am not using etc so this will end the html5 stuff fully okay .
JQUERY :
________
First go through the slide from jquery section of day 2 as it is clearly mentioned over there and students also can easily understand it well .jQuery is a JavaScript library specialized for changing web page documents on the fly so go upto the ready event and explain the concept from slide only and go through ur slides from 14 to 35 and then explain the below lines of code to them and at the same time tell them about DOM .

Remeber the named function will look like this 
function named()
{ 
// do some stuff here 
} 
An anonymous function can be defined in similar way as a normal 
function but it would not have any name.A anonymous function can be assigned to a variable or passed to a method as shown below.
var handler = function ()
{ 
// do some stuff here 
}
JQuery makes a use of anonymous functions very frequently as 
follows:
$(document).ready(function()
{ 
// do some stuff here 
}); 
so another example is there below u can see it clearly 
<script>
$(document).ready(function(){
  $("button").click(function(){
  $("h1").hide("slow");
  $("h2").show("fast");
  $("img").slideUp();
  });
});
</script>


Now let us go ahead with some examples because once we do we will come to know and for this open head first and day 2 slide open to show them demos and all 

<html> 
<head> 
<title>The jQuery Example</title> 
<script type="text/javascript" src="jquery-1.7.1.min.js"></script> 
<script type="text/javascript" language="javascript"> 
$(document).ready(function() 
{ 
$("div").click(function() 
{ 
alert("Hello world!"); 
}); 
});
</script> 
</head> 
<body> 
<div id="newdiv"> Click on this to see a dialogue box. </div> 
</body> </html>


now open one notepad and save it as custom.js 

and write the following code as well 

/* Filename: custom.js */ 
$(document).ready(function() 
{ 
$("div").click(function() 
{ 
alert("Hello world!"); 
}); 
});

and then the above coding will change like this 

<html> 
<head> 
<title>The jQuery Example</title> 
<script type="text/javascript" src=" jquery-1.7.1.min.js "></script> 
<script type="text/javascript" src="custom.js"></script> 
</head> 
<body> 
<div id="newdiv"> Click on this to see a dialogue box. </div> 
</body> 
</html>


some more coding :

using selectors :


<html> 
<head> 
<title>the title</title> 
<script type="text/javascript" src=" jquery-1.7.1.min.js"></script> 
<script type="text/javascript" language="javascript"> 
$(document).ready(function() 
{ 
var pars = $("p"); 
for( i=0; i<pars.length; i++ )
{ 
alert("Found paragraph: " + pars[i].innerHTML); 
} 
}); 
</script> 
</head> 
<body> 
<div> 
<p class="myclass">This is a paragraph.</p> 
<p id="myid">This is second paragraph.</p> <p>This is third paragraph.</p> 
</div> </body> </html>

changing attributes 
____________________
so using this code what i am doing is adding element inside a div tag 
<html> 
<head> 
<title>the title</title> 
<script type="text/javascript" src="jquery-1.7.1.min.js">
</script> 
<script type="text/javascript" language="javascript"> 
$(document).ready(function() 
{ 
var title = $("em").attr("title"); 
$("#divid").text(title); 
}); 
</script> 
</head> 
<body> <div> <em title="Bold and Brave">This is first paragraph.</em> <p 
id="myid">This is second paragraph.</p> <div id="divid"></div> </div> 
</body> </html>

using this code i am changing the src property of image path and even able to display the image as well okay 

<html> <head> 
<title>the title</title> 
<script type="text/javascript" src="jquery-1.7.1.min.js"></script> 
<script type="text/javascript" language="javascript"> 
$(document).ready(function() 
{ 
$("#myimg").attr("src", "images/Pict0001.jpg"); 
}); 
</script> 
</head> 
<body> 
<div> 
<img id="myimg" src="/wongpath.jpg" alt="Sample image" /> 
</div> 
</body> </html> 

applying classes and ids to the element using  jquery ...
<html> 
<head> 
<title>the title</title> 
<script type="text/javascript" src=“jquery-1.7.1.min.js”></script> 
<script type="text/javascript" language="javascript"> 
$(document).ready(function() 
{ 
$("em").addClass("selected"); 
$("#myid").addClass("highlight"); 
}); 
</script> 
<style> 
.selected { color:red; } 
.highlight { background:yellow; } 
</style> 
</head> <body> <em title="Bold and Brave">This is first paragraph.</em> <p 
id="myid">This is second paragraph.</p> </body> </html> 

so the above thing is working in some systems and in some systems it is not working try to go in dreamweaver and type below code and then try so that u can get that okay .

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" >
<title>Inline Styles</title>

some more coding on accessing the list  items 

<html>
<head>
<title>the title</title>
<script type="text/javascript" 
src="jquery-1.7.1.min.js"></script>
<script type="text/javascript" language="javascript">
$(document).ready(function() {
$("li").eq(2).css("color", "red");
});
</script>
</head>
<body>
<div><ul>
<li>list item 1</li><li>list item 2</li><li>list item 3</li>
<li>list item 4</li><li>list item 5</li><li>list item 6</li></ul>
</div>
</body>
</html>

applying multiple values as well 

<html>
<head>
<title>the title</title>
<script type="text/javascript" 
src="jquery-1.7.1.min.js"></script>
<script type="text/javascript" language="javascript">
$(document).ready(function() 
{ 
$("li").eq(2).css({"color":"red", "background-color":"green"}); 
});
</script>
</head>
<body>
<div><ul>
<li>list item 1</li><li>list item 2</li><li>list item 3</li>
<li>list item 4</li><li>list item 5</li><li>list item 6</li></ul>
</div>
</body>
</html>

some more coding 
so below program is provide some animation effects inside it .
<!DOCTYPE html>
<html><head> <title>jQuery goes to DOM-ville</title>
<style> 
  #change_me {
  position: absolute;
  top: 100px;
  left: 400px;
  font: 24px arial;}
  #move_up #move_down #color #disappear {
  padding: 5px;}
</style>
<script type="text/javascript" 
src="jquery-1.7.1.min.js"></script>
</head>
<body>
  <button id="move_up">Move Up</button>
  <button id="move_down">Move Down</button>
  <button id="color">Change Color</button>
  <button id="disappear">Disappear/Re-appear</button>
  <div id="change_me">Make Me Do Stuff!</div>
  <script>
    $(document).ready(function() {
      $("#move_up").click( function() {
        $("#change_me").animate({top:30},200);
      });//end move_up
      $("#move_down").click( function() {
        $("#change_me").animate({top:500},2000);
      });//end move_down
      $("#color").click( function() {
        $("#change_me").css("color", "purple");
      });//end color
      $("#disappear").click( function() {
        $("#change_me").toggle("slow");
      });//end disappear
    });//end doc ready
  </script>
</body>
</html>


some more coding 

<!DOCTYPE html>
<html>
  <head>
    <title>Furry Friends Campaign</title>
	<style>
   #clickMe {
    background: #D8B36E;
    padding: 20px;
    text-align: center;
    width: 205px;
    display: block;
    border: 2px solid #000;
}
#picframe {
    background: #D8B36E;
    padding: 20px;
    width: 205px;
    display: none;
    border: 2px solid #000;
}

</style>
  </head>
  <body>
    <div id="clickMe">Show me the Furry Friend of the Day</div>
    <div id="picframe">
    <img src="merlin.gif">
    </div>
    <script src="jquery-1.7.1.min.js"></script>
    <script>
      $(document).ready(function(){
    $("#clickMe").click(function() {
    $("img").fadeIn(1000);
    $("#picframe").slideToggle("slow");
    });
      });
    </script>
  </body>
</html>

After this u go through internet w3schools and execute the code ask them to do it by themselves .

some more examples remove the comments in this and check the output of the code and design how it changes and all it is using some filter option only which we have performed earlier .

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Document</title>
 <script src="jquery-1.7.1.min.js"></script>
<script type="text/javascript">
    $("document").ready(function() {
        //$("p[class]").css("border", "3px solid red");
        //$("p[id=para1]").css("border", "3px solid red");
        //$("p[id^=para]").css("border", "3px solid red");
        //$("p[id^=para][lang*=en-]").css("border", "3px solid red");
    });
</script>
<style type="text/css">
.a { color: Navy; }
.b { color: Maroon; }
</style>
</head>
<body>
	<ul id="list1">
		<li class="a">item 1</li>
		<li class="a">item 2</li>
		<li class="b">item 3</li>
		<li class="b">item 4</li>
	</ul>
<p class="a">This is paragraph 1</p>
<p id="para1">This is paragraph 2</p>
<p class="b">This is paragraph 3</p>
<p id="para4" lang="en-us">This is paragraph 4</p>
</body>
</html>
