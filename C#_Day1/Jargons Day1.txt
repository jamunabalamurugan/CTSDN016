.NET is a framework that provides a platform to develop different types of application.
Types of Application that can be created in .NET is:
1. Desktop Application - Console Application (NO GUI), Windows Application
2. Web Application ASP.NET
3. Mobile Application Xamarin
.NET framework provides:
	1. BCL (Base Class Libraries - Header files of C++)
	2. Languages - C#, VB.NET, J#, F#, VC++, perl, smalltalk, python, ruby on rails.
C# compiler will compile c# source Code - MSIL (Microsoft Intermediate Language)
VB compiler will compile VB source Code - MSIL/CIL Common Intermediate Language
 For Execution, MSIL is sent to CLR (Common Language Runtime)
JIT (Just InTime Compiler) converts the MSIL code into native code which can be understood by OS.
CLS - Common Language Specification - Set of Rules that .NET targeting languages should adhere to.
CTS - Common Type System - susbet of CLS
Managed Code- The set of statements which can be understood by CLR
Unmanaged Code - Set of statements which are not managed by CLR.

C# - Language 
VS2015 - IDE (Integrated Development Environment) (Eclipse/Netbeans)

Namespace - collection of classes
Solution is a collection of projects
C# is a case sensitive language

C# program structure
Namespace, Nested Namespace
// - single line comment   /* */ - multiple line comment
/// Comments or Description


Ildasm.exe- to disassemble the assembly of an application and to know the classes and methods of a .NET application
Assembly is a logical unit of deployment
It consists of PE (Portable Executable), manifest and metadata.
Assemblies can be dll or exe
exe - executables - Winword, calc, firstapplication
dll - dynamic link libraries  -ctrl+f, ctrl v, ctrl c
dll does not have a memory of its own. They execute themselves with in an host application. 
Advantage of dll is reusability.

Assemblies are of 2 types
1. private Assembly
2. Shared Assembly

Global Assembly Cache - the place where the assembly is deployed with a strong name for many users to use
the same copy of the assembly.
Strong name - signing is done to the assembly in order to deploy the assembly in GAC.
gacutil/i app.exe is the command used to deploy our assembly in cache.

Datatypes-
1. Value Types - int, boolean, float, struct, enum
2. Reference Types - string, object, class

Typecasting - Converting one datatype to another
There are two types of typecasting - implicit and explicit
Implicit- To convert int to float 
Explicit - To convert float to int - we use convert.toint16();

Boxing - Converting value type to reference type
UnBoxing - Converting reference type to value type (converted string to int/float)